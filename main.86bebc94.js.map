{"version":3,"sources":["scripts/main.js"],"names":["start","document","querySelector","fieldCell","querySelectorAll","messageStart","messageLose","messageWin","gameScore","arrayCell","secondClick","actionInSwipe","down","up","right","left","arrowCases","updateActions","swipe","checkGameOver","checkEmptyCell","filter","cell","textContent","length","checkSomeAction","classList","remove","checkGameWin","find","toggle","resetCellAndScore","map","className","getRandomNumber","numb","Math","round","random","addNewNumberOnField","numberCeill","actionRemove","randomNumber","add","startGame","addNumber","checkedCell","currentCell","sumNumb","movingCeill","addOrMoveCeill","checkedCellInFunction","downSwipe","indexColumn","indexCell","upSwipe","rightSwipe","indexRow","includes","leftSwipe","comprativeCell","addEventListener","e","style","fontSize","key"],"mappings":"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","file":"main.86bebc94.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst start = document.querySelector('.start');\nconst fieldCell = document.querySelectorAll('.field-cell');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\nconst arrayCell = [...fieldCell];\nlet secondClick = false;\nconst actionInSwipe = {\n  down: false,\n  up: false,\n  right: false,\n  left: false,\n};\n\nconst arrowCases = {\n  down: 'ArrowDown',\n  up: 'ArrowUp',\n  right: 'ArrowRight',\n  left: 'ArrowLeft',\n};\n\nfunction updateActions() {\n  for (const swipe in actionInSwipe) {\n    actionInSwipe[swipe] = true;\n  }\n}\n\nfunction checkGameOver() {\n  const checkEmptyCell = arrayCell.filter(cell => !cell.textContent).length;\n\n  function checkSomeAction() {\n    for (const swipe in actionInSwipe) {\n      if (actionInSwipe[swipe]) {\n        return true;\n      };\n    }\n\n    return false;\n  }\n\n  if (!checkSomeAction() && !checkEmptyCell) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction checkGameWin() {\n  if (arrayCell.find(cell => cell.textContent === '2048')) {\n    messageWin.classList.toggle('hidden');\n  }\n}\n\nfunction resetCellAndScore() {\n  arrayCell.map(cell => {\n    cell.textContent = null;\n    cell.className = 'field-cell';\n  });\n  gameScore.textContent = 0;\n}\n\nconst getRandomNumber = (numb) => Math.round(Math.random() * numb);\n\nfunction addNewNumberOnField(numberCeill, actionRemove) {\n  const randomNumber = getRandomNumber(4) === 4 ? 4 : 2;\n  const checkEmptyCell = arrayCell.filter(cell => !cell.textContent).length;\n\n  if (checkEmptyCell) {\n    if (!arrayCell[numberCeill].textContent) {\n      arrayCell[numberCeill].textContent = randomNumber;\n      arrayCell[numberCeill].classList.add(`field-cell--${randomNumber}`);\n    } else {\n      addNewNumberOnField(getRandomNumber(15));\n    }\n  } else {\n    actionInSwipe[actionRemove] = false;\n  }\n};\n\nstart.addEventListener('click', () => {\n  if (secondClick) {\n    resetCellAndScore();\n  }\n\n  startGame();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (start.textContent === 'Start') {\n    start.classList.add('restart');\n    start.textContent = 'Restart';\n    start.style.fontSize = '18px';\n  }\n\n  switch (e.key) {\n    case arrowCases.down:\n      downSwipe();\n      break;\n    case arrowCases.up:\n      upSwipe();\n      break;\n    case arrowCases.right:\n      rightSwipe();\n      break;\n    case arrowCases.left:\n      leftSwipe();\n      break;\n\n    default:\n      break;\n  }\n});\n\nfunction startGame() {\n  secondClick = true;\n  messageStart.classList.add('hidden');\n  start.classList.toggle('.restart');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n\n  addNewNumberOnField(getRandomNumber(15));\n  addNewNumberOnField(getRandomNumber(15));\n}\n\nfunction addNumber(checkedCell, currentCell) {\n  const numb = +arrayCell[currentCell].textContent;\n  const sumNumb = numb + numb;\n\n  gameScore.textContent = +gameScore.textContent + sumNumb;\n\n  arrayCell[checkedCell].textContent = sumNumb;\n  arrayCell[checkedCell].classList.toggle(arrayCell[currentCell].classList[1]);\n  arrayCell[checkedCell].classList.add(`field-cell--${sumNumb}`);\n\n  arrayCell[currentCell].className = 'field-cell';\n  arrayCell[currentCell].textContent = null;\n}\n\nfunction movingCeill(checkedCell, currentCell) {\n  const numb = +arrayCell[currentCell].textContent;\n\n  arrayCell[checkedCell].textContent = numb;\n  arrayCell[checkedCell].classList.toggle(arrayCell[currentCell].classList[1]);\n\n  arrayCell[currentCell].className = 'field-cell';\n  arrayCell[currentCell].textContent = null;\n}\n\nfunction addOrMoveCeill(checkedCellInFunction, currentCell) {\n  if (!arrayCell[checkedCellInFunction].textContent) {\n    movingCeill(checkedCellInFunction, currentCell);\n\n    return 'moving';\n  }\n\n  if (arrayCell[checkedCellInFunction].textContent\n    === arrayCell[currentCell].textContent) {\n    addNumber(checkedCellInFunction, currentCell);\n\n    return 'add';\n  }\n}\n\nfunction downSwipe() {\n  let checkedCell = 12;\n  let currentCell = 8;\n\n  for (let indexColumn = 0; indexColumn < 4; indexColumn++) {\n    checkedCell += indexColumn;\n    currentCell += indexColumn;\n\n    for (let indexCell = currentCell; indexCell >= 0; indexCell -= 4) {\n      if (arrayCell[indexCell].textContent) {\n        if (!arrayCell[checkedCell].textContent) {\n          movingCeill(checkedCell, indexCell);\n          updateActions();\n          continue;\n        }\n\n        if (arrayCell[checkedCell].textContent\n          === arrayCell[indexCell].textContent) {\n          addNumber(checkedCell, indexCell);\n          checkedCell -= 4;\n          updateActions();\n          continue;\n        } else {\n          if (indexCell - 3 > 0 && ((indexCell - 7) < 0)) {\n            if (checkedCell - 4 !== indexCell) {\n              checkedCell -= 4;\n            }\n\n            if (addOrMoveCeill(checkedCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          if (indexCell - 4 < 0) {\n            if (checkedCell - 4 !== indexCell) {\n              checkedCell -= 4;\n            }\n\n            if (addOrMoveCeill(checkedCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          checkedCell -= 4;\n        }\n      }\n    }\n    checkedCell = 12;\n    currentCell = 8;\n  }\n\n  if (actionInSwipe.down) {\n    addNewNumberOnField(getRandomNumber(15), 'down');\n  }\n\n  checkGameOver();\n  checkGameWin();\n}\n\nfunction upSwipe() {\n  let checkedCell = 0;\n  let currentCell = 4;\n\n  for (let indexColumn = 0; indexColumn < 4; indexColumn++) {\n    checkedCell += indexColumn;\n    currentCell += indexColumn;\n\n    for (let indexCell = currentCell; indexCell < 16; indexCell += 4) {\n      if (arrayCell[indexCell].textContent) {\n        if (!arrayCell[checkedCell].textContent) {\n          movingCeill(checkedCell, indexCell);\n          updateActions();\n          continue;\n        }\n\n        if (arrayCell[checkedCell].textContent\n          === arrayCell[indexCell].textContent) {\n          addNumber(checkedCell, indexCell);\n          checkedCell += 4;\n          updateActions();\n          continue;\n        } else {\n          if (indexCell - 7 > 0 && ((indexCell - 12) < 0)) {\n            if (checkedCell + 4 !== indexCell) {\n              checkedCell += 4;\n            }\n\n            if (addOrMoveCeill(checkedCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          if (indexCell - 11 > 0) {\n            if (checkedCell + 4 !== indexCell) {\n              checkedCell += 4;\n            }\n\n            if (addOrMoveCeill(checkedCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          checkedCell += 4;\n        }\n      }\n    }\n    checkedCell = 0;\n    currentCell = 4;\n  }\n\n  if (actionInSwipe.up) {\n    addNewNumberOnField(getRandomNumber(15), 'up');\n  }\n\n  checkGameOver();\n  checkGameWin();\n}\n\nfunction rightSwipe() {\n  let checkedCell = 3;\n  let currentCell = 2;\n\n  for (let indexRow = 0; indexRow < 16; indexRow += 4) {\n    checkedCell += indexRow;\n    currentCell += indexRow;\n\n    for (let indexCell = currentCell; (indexCell + 1) % 4 !== 0; indexCell--) {\n      if (arrayCell[indexCell].textContent) {\n        if (!arrayCell[checkedCell].textContent) {\n          movingCeill(checkedCell, indexCell);\n          updateActions();\n          continue;\n        }\n\n        if (arrayCell[checkedCell].textContent\n          === arrayCell[indexCell].textContent) {\n          addNumber(checkedCell, indexCell);\n          checkedCell -= 1;\n          updateActions();\n          continue;\n        } else {\n          if ([1, 5, 9, 13].includes(indexCell)) {\n            if (checkedCell - 1 !== indexCell) {\n              checkedCell -= 1;\n            }\n\n            if (addOrMoveCeill(checkedCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          if ([0, 4, 8, 12].includes(indexCell)) {\n            if (checkedCell - 1 !== indexCell) {\n              checkedCell -= 1;\n            }\n\n            if (addOrMoveCeill(checkedCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          checkedCell -= 1;\n        }\n      }\n    }\n    checkedCell = 3;\n    currentCell = 2;\n  }\n\n  if (actionInSwipe.right) {\n    addNewNumberOnField(getRandomNumber(15), 'right');\n  }\n\n  checkGameOver();\n  checkGameWin();\n}\n\nfunction leftSwipe() {\n  let comprativeCell = 0;\n  let currentCell = 1;\n\n  for (let indexRow = 0; indexRow < 16; indexRow += 4) {\n    comprativeCell += indexRow;\n    currentCell += indexRow;\n\n    for (let indexCell = currentCell; indexCell % 4 !== 0; indexCell++) {\n      if (arrayCell[indexCell].textContent) {\n        if (!arrayCell[comprativeCell].textContent) {\n          movingCeill(comprativeCell, indexCell);\n          updateActions();\n          continue;\n        }\n\n        if (arrayCell[comprativeCell].textContent\n          === arrayCell[indexCell].textContent) {\n          addNumber(comprativeCell, indexCell);\n          comprativeCell += 1;\n          updateActions();\n          continue;\n        } else {\n          if ([2, 6, 10, 14].includes(indexCell)) {\n            if (comprativeCell + 1 !== indexCell) {\n              comprativeCell += 1;\n            }\n\n            if (addOrMoveCeill(comprativeCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          if ([3, 7, 11, 15].includes(indexCell)) {\n            if (comprativeCell + 1 !== indexCell) {\n              comprativeCell += 1;\n            }\n\n            if (addOrMoveCeill(comprativeCell, indexCell)) {\n              updateActions();\n              continue;\n            }\n          }\n\n          comprativeCell += 1;\n        }\n      }\n    }\n    comprativeCell = 0;\n    currentCell = 1;\n  }\n\n  if (actionInSwipe.left) {\n    addNewNumberOnField(getRandomNumber(15), 'left');\n  }\n  checkGameOver();\n  checkGameWin();\n}\n"]}